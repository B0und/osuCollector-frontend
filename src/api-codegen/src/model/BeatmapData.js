/*
 * osu! Collector
 * Upload and get osu collections
 *
 * OpenAPI spec version: 1.0.0
 * Contact: junarvi@yahoo.ca
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OsuCollector) {
      root.OsuCollector = {};
    }
    root.OsuCollector.BeatmapData = factory(root.OsuCollector.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The BeatmapData model module.
   * @module model/BeatmapData
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>BeatmapData</code>.
   * @alias module:model/BeatmapData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>BeatmapData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BeatmapData} obj Optional instance to populate.
   * @return {module:model/BeatmapData} The populated <code>BeatmapData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('difficulty_rating'))
        obj.difficultyRating = ApiClient.convertToType(data['difficulty_rating'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('total_length'))
        obj.totalLength = ApiClient.convertToType(data['total_length'], 'Number');
      if (data.hasOwnProperty('user_id'))
        obj.userId = ApiClient.convertToType(data['user_id'], 'Number');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'String');
      if (data.hasOwnProperty('accuracy'))
        obj.accuracy = ApiClient.convertToType(data['accuracy'], 'Number');
      if (data.hasOwnProperty('ar'))
        obj.ar = ApiClient.convertToType(data['ar'], 'Number');
      if (data.hasOwnProperty('beatmapset_id'))
        obj.beatmapsetId = ApiClient.convertToType(data['beatmapset_id'], 'Number');
      if (data.hasOwnProperty('bpm'))
        obj.bpm = ApiClient.convertToType(data['bpm'], 'Number');
      if (data.hasOwnProperty('count_circles'))
        obj.countCircles = ApiClient.convertToType(data['count_circles'], 'Number');
      if (data.hasOwnProperty('count_sliders'))
        obj.countSliders = ApiClient.convertToType(data['count_sliders'], 'Number');
      if (data.hasOwnProperty('count_spinners'))
        obj.countSpinners = ApiClient.convertToType(data['count_spinners'], 'Number');
      if (data.hasOwnProperty('cs'))
        obj.cs = ApiClient.convertToType(data['cs'], 'Number');
      if (data.hasOwnProperty('drain'))
        obj.drain = ApiClient.convertToType(data['drain'], 'Number');
      if (data.hasOwnProperty('hit_length'))
        obj.hitLength = ApiClient.convertToType(data['hit_length'], 'Number');
      if (data.hasOwnProperty('last_updated'))
        obj.lastUpdated = ApiClient.convertToType(data['last_updated'], 'Number');
      if (data.hasOwnProperty('mode_int'))
        obj.modeInt = ApiClient.convertToType(data['mode_int'], 'Number');
      if (data.hasOwnProperty('playcount'))
        obj.playcount = ApiClient.convertToType(data['playcount'], 'Number');
      if (data.hasOwnProperty('ranked'))
        obj.ranked = ApiClient.convertToType(data['ranked'], 'Number');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('checksum'))
        obj.checksum = ApiClient.convertToType(data['checksum'], 'String');
      if (data.hasOwnProperty('max_combo'))
        obj.maxCombo = ApiClient.convertToType(data['max_combo'], 'Number');
      if (data.hasOwnProperty('beatmapset'))
        obj.beatmapset = ApiClient.convertToType(data['beatmapset'], Object);
    }
    return obj;
  }

  /**
   * @member {Number} difficultyRating
   */
  exports.prototype.difficultyRating = undefined;

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {Number} totalLength
   */
  exports.prototype.totalLength = undefined;

  /**
   * @member {Number} userId
   */
  exports.prototype.userId = undefined;

  /**
   * @member {String} version
   */
  exports.prototype.version = undefined;

  /**
   * @member {Number} accuracy
   */
  exports.prototype.accuracy = undefined;

  /**
   * @member {Number} ar
   */
  exports.prototype.ar = undefined;

  /**
   * @member {Number} beatmapsetId
   */
  exports.prototype.beatmapsetId = undefined;

  /**
   * @member {Number} bpm
   */
  exports.prototype.bpm = undefined;

  /**
   * @member {Number} countCircles
   */
  exports.prototype.countCircles = undefined;

  /**
   * @member {Number} countSliders
   */
  exports.prototype.countSliders = undefined;

  /**
   * @member {Number} countSpinners
   */
  exports.prototype.countSpinners = undefined;

  /**
   * @member {Number} cs
   */
  exports.prototype.cs = undefined;

  /**
   * @member {Number} drain
   */
  exports.prototype.drain = undefined;

  /**
   * @member {Number} hitLength
   */
  exports.prototype.hitLength = undefined;

  /**
   * @member {Number} lastUpdated
   */
  exports.prototype.lastUpdated = undefined;

  /**
   * @member {Number} modeInt
   */
  exports.prototype.modeInt = undefined;

  /**
   * @member {Number} playcount
   */
  exports.prototype.playcount = undefined;

  /**
   * @member {Number} ranked
   */
  exports.prototype.ranked = undefined;

  /**
   * @member {String} url
   */
  exports.prototype.url = undefined;

  /**
   * @member {String} checksum
   */
  exports.prototype.checksum = undefined;

  /**
   * @member {Number} maxCombo
   */
  exports.prototype.maxCombo = undefined;

  /**
   * @member {Object} beatmapset
   */
  exports.prototype.beatmapset = undefined;


  return exports;

}));
