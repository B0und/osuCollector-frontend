/*
 * osu! Collector
 * Upload and get osu collections
 *
 * OpenAPI spec version: 1.0.0
 * Contact: junarvi@yahoo.ca
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeatmapData', 'model/CollectionData', 'model/CollectionUploadData', 'model/CollectionsUploadData', 'model/CommentData', 'model/LikeData', 'model/RangeParameters', 'model/RangeParametersWithDate', 'model/RequiredRangeParameters', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BeatmapData'), require('./model/CollectionData'), require('./model/CollectionUploadData'), require('./model/CollectionsUploadData'), require('./model/CommentData'), require('./model/LikeData'), require('./model/RangeParameters'), require('./model/RangeParametersWithDate'), require('./model/RequiredRangeParameters'), require('./api/DefaultApi'));
  }
}(function(ApiClient, BeatmapData, CollectionData, CollectionUploadData, CollectionsUploadData, CommentData, LikeData, RangeParameters, RangeParametersWithDate, RequiredRangeParameters, DefaultApi) {
  'use strict';

  /**
   * Upload_and_get_osu_collections.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var OsuCollector = require('index'); // See note below*.
   * var xxxSvc = new OsuCollector.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new OsuCollector.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new OsuCollector.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new OsuCollector.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BeatmapData model constructor.
     * @property {module:model/BeatmapData}
     */
    BeatmapData: BeatmapData,
    /**
     * The CollectionData model constructor.
     * @property {module:model/CollectionData}
     */
    CollectionData: CollectionData,
    /**
     * The CollectionUploadData model constructor.
     * @property {module:model/CollectionUploadData}
     */
    CollectionUploadData: CollectionUploadData,
    /**
     * The CollectionsUploadData model constructor.
     * @property {module:model/CollectionsUploadData}
     */
    CollectionsUploadData: CollectionsUploadData,
    /**
     * The CommentData model constructor.
     * @property {module:model/CommentData}
     */
    CommentData: CommentData,
    /**
     * The LikeData model constructor.
     * @property {module:model/LikeData}
     */
    LikeData: LikeData,
    /**
     * The RangeParameters model constructor.
     * @property {module:model/RangeParameters}
     */
    RangeParameters: RangeParameters,
    /**
     * The RangeParametersWithDate model constructor.
     * @property {module:model/RangeParametersWithDate}
     */
    RangeParametersWithDate: RangeParametersWithDate,
    /**
     * The RequiredRangeParameters model constructor.
     * @property {module:model/RequiredRangeParameters}
     */
    RequiredRangeParameters: RequiredRangeParameters,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
